<!DOCTYPE html>

<html lang="en">
<head>
   <%include ../partials/head %>
   <title>Disponibilidad</title>
   <style>
     @media print
    {    
        .no-print, .no-print *
        {
            display: none !important;
        }
    }
    </style>

</head>

<body>



<%include ../partials/logos %>
<div class="menu">
    <div class="panel with-nav-tabs panel-primary">
        <div class="panel-heading no-print">
            <ul class="nav nav-tabs">
                <li><a href="inicio">Inicio</a></li>
                <li class="active"><a href="disponibilidad">Disponibilidad</a></li>
                <li><a href="rendimiento">Rendimiento</a></li>
                <li><a href="calidad">Calidad</a></li>
                <li><a href="oee">OEE</a></li>
                <li><a href="modificarcalidad">Modificar calidad</a></li>
                <li><a href="superusuario">Panel super usuario</a></li>
                <li class="pull-right">
                    <a href="configuracion" class="btn btn-primary-outline"><i class="fa fa-cog" aria-hidden="true"> Configuraci√≥n</i></a>
                </li>
                <li class="pull-right">
                    <a href="usuario" class="btn btn-primary-outline"><i class="fa fa-user-o" aria-hidden="true"> <%= user.username %></i></a>
                </li>
            </ul>
        </div>
        <div class="panel-body">
            <div class="tab-content">
                <div class="tab-pane fade in active">
                    <div class="container">
                    <div class="row">
                        
                            <div class="row">
                            <div class="col-lg-12 col-sm-12">
                                <h2>Disponibilidad</h2>
                                <hr/>
                                <div class="content">
                                    <%include ../partials/search %>
                                </div>
                            </div>
                            </div>
                    
                    
                            <div>
                                <div class="row" >
                                    <div class="col-lg-6 col-sm-6 col-p-12">
                                        <div id="tatm" style="min-width: 310px; height: 400px; max-width: 600px; margin: 0 auto"></div>
                                    </div>
                                    <div class="col-lg-6 col-sm-6 col-p-12">
                                        <div id="desglose" style="min-width: 310px; height: 400px; max-width: 600px; margin: 0 auto"></div>
                                    </div>
                                </div>
                                <div class="row" >
                                    <br/>
                                    <div class="col-lg-12 col-sm-12">
                                        <div id = "tabla-desglose"></div>
                                    </div>
                                </div>
                                <div class="row" >
                                    <div class="col-lg-12 col-sm-12">
                                        <div id = "tabla-desglose-eventos"></div>
                                    </div>
                                </div>
                                <div class="row" >
                                    <br/>
                                    <div class="col-lg-6 col-sm-6 col-p-12">
                                        <div style="width: 600px; height: 400px; margin: 0 auto">
                                            <div id="disponibilidad" style="min-width: 310px; height: 400px; max-width: 600px; margin: 0 auto"></div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-sm-6 col-p-12">
                                        <div class="jumbotron text-center">
                                            <h1 id= "horas-titulo"></h1> 
                                            <p id= "horas"></p> 
                                        </div>
                                    </div>
                                </div>
                                <div class="row" >
                                    <br/>
                                    <div class="col-lg-6 col-sm-6 col-p-12">
                                    </div>
                                    <div class="col-lg-6 col-sm-6 col-p-12">
                                        <div class="jumbotron text-center">
                                            <button style="display:none"; class="btn btn-primary pull-right no-print" onclick="JSONToCSVConvertor('Disponibilidad', true)" id="reporte-excel">Descargar historial en excel</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <table id="tabla-excel" style="display:none;">
                                <tr>
                                    <td colspan="5">Disponibilidad</td>
                                    <td><img src='./img/kinnil.png' alt=''/></td>
                                </tr>
                                <tr>
                                    <td>Usuario:</td>
                                    <td><%= user.username %></td>
                                </tr>
                                <tr>
                                    <td>Planta:</td>
                                    <td id="tabla-planta"></td>
                                    <td></td>
                                    <td>Area:</td>
                                    <td id="tabla-area"></td>
                                </tr>
                                <tr>
                                    <td>Fecha inicio:</td>
                                    <td id="tabla-fecha-inicio"></td>
                                    <td></td>
                                    <td>Fecha fin:</td>
                                    <td id="tabla-fecha-fin"></td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<%include ../partials/footer %>




       <!--<script src="http://code.jquery.com/jquery-1.10.1.min.js"></script>-->
       <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
       <script src="/socket.io/socket.io.js"></script> 
       <%include ../partials/js %>
       <%include ../partials/js-search %>
       <script type="text/javascript" src='./js/highcharts.js'></script>
       <script type="text/javascript" src='./js/highcharts-more.js'></script>
       <script type="text/javascript" src='./js/solid-gauge.js'></script>
       <script>
            // Se hace la consulta segun los campos seleccionados
            // TODO: tomar en cuenta las reglas del negocio a programar
            // una planta o todas, una area a todas, un producto o varios mas 
            // TODO: ya no encontre las demas hojas, hay que retomar con ricardo y ver si va a haber casos especificos donde se seleccione por maquina
            //
            // leoni.kinnilweb.com
             //var socket = io.connect('http://ec2-18-219-18-35.us-east-2.compute.amazonaws.com:3000');
            // ezair.kinnilweb.com
            //var socket = io.connect('http://ec2-13-58-128-66.us-east-2.compute.amazonaws.com:3000');
            // localhost:3000
            // var socket = io.connect('localhost:3000');
            // nuevo ambiente de pruebas
            //var socket = io.connect('http://ec2-18-222-91-253.us-east-2.compute.amazonaws.com:3000');

            // VISTEON
            //var socket = io.connect('http://159.65.96.228:3000');
		var socket = io.connect('kaman.kinnilweb.com:3000');
        var json = {};
            
            function consultar(e) {
            /*************************************************************************************************************
             * Funcion que se manda llamar para hacer la peticion de informacion al servidor para generar un reporte     *
             * @param: e es el evento que mando llamar la funcion                                                        *
             *************************************************************************************************************/
                var e = window.event || e;
	            var targ = e.target || e.srcElement;
    
                //console.log("se hizo una consulta");
    
                json = {};
                json.planta = $("#plantas-choice").val();
                json.area = $("#areas-choice").val();
                json.turno = $("#turno").val();
                json.producto = $("#producto").val();
                json.inicio = fechaInicio.format('YYYY-MM-DD'); // TODO: hay que ver si esta fecha siempre va a ser igual o si falla como en C#
                json.fin = fechaFin.format('YYYY-MM-DD');
                json.horaInicio = $('#horaInicio').val();
                json.horaFin = $('#horaFin').val();
                json.tipo = tipo;
                // TODO: Agregar las validaciones
                // TODO: desplegar un mensage de que no se puede graficar si es que el reporte no regreso datos
    
                e.preventDefault(); // Previene que ocurra el evento POST y se refresque la pagina asi como asi
    
                // No hace POST si no hay productos o turnos seleccionados
                if (tipo == 'turno' && json.turno == 'noturnos'){
                    alert("No se puede obtener el reporte por turnos, No hay turnos"); 
                    return;
                }
                if (tipo == 'producto' && json.producto == 'noproductos'){
                    alert("No se puede obtener el reporte por productos, No hay productos");
                    return;
                }
                socket.emit('reporte-oee', json);
            }


              /*          $(document).ready(function(){
                $('button').click(function(){
                    var data = $('#txt').val();
                    if(data == '')
                        return;
                    
                    JSONToCSVConvertor(data, "Vehicle Report", true);
                });
            });*/
            var JSONData = [];
            function JSONToCSVConvertor(ReportTitle, ShowLabel) {
                
            /*************************************************************************************
             * Funcion que convierte un csv a un archivo de excel                                *
             * @param: ReportTitle es el titulo del archivo                                      *
             * @param: ShowLabel era parte del titulo del archivo, TODO: eliminar este parametro *
             *************************************************************************************/
                var CSV = '';    
                //Set Report title in first row or line
                CSV += ReportTitle + '\r\n\n';
                var row = "";
                row += 'Usuario:,<%= user.username %>\r\n';
                row += 'Planta:,'+json.planta+',,Area:,'+json.area+'\r\n';
                row += 'Fecha inicio:,'+json.inicio+',,Fecha Fin:,'+json.fin+'\r\n';
                CSV += row + '\r\n';
                
                for(var j = 0; j<JSONData.length;j++){
                    //If JSONData is not an object then JSON.parse will parse the JSON string in an Object
                    var arrData = typeof JSONData[j] != 'object' ? JSON.parse(JSONData[j]) : JSONData[j];
                    //console.log(arrData);
                    //console.log(arrData.length);
                    //var arrData = JSONData[j];
                    //This condition will generate the Label/Header
                    if (j<1) {
                        row = "";
                        jQuery.each(arrData, function(key, val) {

                             if(key=='fechaInicio' || key=='fechaFin' || key=='inicio' || key=='fin' || key=='nombre'){
                                row += key + ',';
                            }
                            //$("#" + i).append(document.createTextNode(" - " + val));
                        });
                        //This loop will extract the label from 1st index of on array
                        /*for (var key in arrData[0]) {
                            
                            //Now convert each value to string and comma-seprated
                            if(key=='fechaInicio' || key=='fechaFin' || key=='inicio' || key=='fin' || key=='nombre'){
                                row += key + ',';
                            }
                        }*/

                        row = row.slice(0, -1);
                        
                        //append Label row with line break
                        CSV += row + '\r\n';
                    }
                    row = "";
                    jQuery.each(arrData, function(key, val) {
                        
                        if(key=='fechaInicio' || key=='fechaFin' || key=='inicio' || key=='fin' || key=='nombre'){
                            if(key=='fechaInicio' || key=='fechaFin'){
                                row += '"' + val.substring(0,10) + '",';
                            }else{
                                row += '"' + val + '",';
                            }
                        }

                        if(key=='nombre'){
                            row.slice(0, row.length - 1);
                        
                            //add a line break after each row
                            CSV += row + '\r\n';
                            row = "";
                        }
                        

                    //$("#" + i).append(document.createTextNode(" - " + val));
                    });
                    
                    //1st loop is to extract each row
                    /*for (var i = 0; i < arrData.length; i++) {
                        row = "";
                        
                        //2nd loop will extract each column and convert it in string comma-seprated
                        for (var index in arrData[i]) {
                            if(index=='fechaInicio' || index=='fechaFin' || index=='inicio' || index=='fin' || index=='nombre'){
                                if(index=='fechaInicio' || index=='fechaFin'){
                                    row += '"' + arrData[i][index].substring(0,10) + '",';
                                }else{
                                    row += '"' + arrData[i][index] + '",';
                                }
                            }
                        }

                        row.slice(0, row.length - 1);
                        
                        //add a line break after each row
                        CSV += row + '\r\n';
                    }*/

                }
                
                if (CSV == '') {        
                    alert("Invalid data");
                    return;
                }   
                var date = new Date();
                //Generate a file name
                var fileName = "Disponibilidad_"+ date.getDate();
                //this will remove the blank-spaces from the title and replace it with an underscore
                //fileName += ReportTitle.replace(/ /g,"_");   
                
                //Initialize file format you want csv or xls
                var uri = 'data:text/csv;charset=utf-8,' + escape(CSV);
                
                // Now the little tricky part.
                // you can use either>> window.open(uri);
                // but this will not work in some browsers
                // or you will not get the correct file extension    
                
                //this trick will generate a temp <a /> tag
                var link = document.createElement("a");    
                link.href = uri;
                
                //set the visibility hidden so it will not effect on your web-layout
                link.style = "visibility:hidden";
                link.download = fileName + ".csv";
                
                //this part will append the anchor tag and remove it after automatic click
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
            }

            function toPDF(e){
                /********************************************************
                 * Funcion que se manda llamar para imprimir un reporte *
                 * @param: e es el evento que mando llamar la funcion   *
                 ********************************************************/
                var e = window.event || e;
	            var targ = e.target || e.srcElement;
                e.preventDefault();
                window.print();
            }
    
            socket.on('reporte-oee', function(message) {
                /*************************************************************************************************************
                 * Socket que se manda llamar para hacer la peticion de informacion al servidor para generar un reporte      *
                 * @param: message es un objeto con toda la informacion que provee el servidor                               *
                 *************************************************************************************************************/
                console.log("se recibio un evento de reporte-oee" );
                console.log(message);
                // TODO: agregar validaciones para cuando los valores sean nulos disponibilidad:[] rendimiento[] calidad[] se tiene que mostrar un mensaje al usuario o algo!
                window.scroll({ top: 500, left: 0, behavior: 'smooth' }); // Scroll sencillo smooth
                //JSONData = message.desglosehoras;
                
                for(var i = 0;i<message.desglosehoras.length;i++){
                    JSONData.push(message.desglosehoras[i]);
                }
                //console.log(JSONData);

                $("#reporte-excel").show();
                /*
                * TA/TM
                */
                var inicio = new Date(json.inicio.substring(0,4),json.inicio.substring(5,7)-1,json.inicio.substring(8),message.turnoActual[0].inicio.substring(0,2),message.turnoActual[0].inicio.substring(3,5),message.turnoActual[0].inicio.substring(6));
                var fin = new Date(json.fin.substring(0,4),json.fin.substring(5,7)-1,json.fin.substring(8),message.turnoActual[0].fin.substring(0,2),message.turnoActual[0].fin.substring(3,5),message.turnoActual[0].fin.substring(6));
                var ahora = new Date();
                
                var ta = message.disponibilidad[0].ta/60/60;
                var tm = message.disponibilidad[0].tm/60/60;
                
                if(ahora>fin){
                    var diff = (fin - inicio);
                    diff /= (1000);
                    var hours = Math.abs(fin - inicio) / 36e5;
                    $("#horas-titulo").html("Horas trabajadas: " + ta.toFixed(2) + " de " + (hours).toFixed(2));
                }else{
                    $("#horas-titulo").html("Horas trabajadas: " + ta.toFixed(2) + " de " + (ta+tm).toFixed(2));
                }
                

                Highcharts.chart('tatm', {
                    chart: {
                        plotBackgroundColor: null,
                        plotBorderWidth: null,
                        plotShadow: false,
                        type: 'pie'
                    },
                    title: {
                        text: 'Tiempo activo y tiempo muerto'
                    },
                    tooltip: {
                        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
                    },
                    plotOptions: {
                        pie: {
                            allowPointSelect: true,
                            cursor: 'pointer',
                            dataLabels: {
                                enabled: true,
                                format: '<b>{point.name}</b>: {point.percentage:.1f} %',
                                style: {
                                    color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'
                                }
                            }
                        }
                    },
                    series: [{
                        name: 'TA/TM',
                        colorByPoint: true,
                        data: [{
                            name: 'Tiempo Activo',
                            y: ta
                        }, {
                            name: 'Tiempo Muerto',
                            y: tm
                        }]
                    }]
                });

                /*  
                * Desglose de tiempo muerto
                */
                var data = []; 
                for (var i = 0, l  = message.desglose.length ; i < l; i += 1) {
                    data.push({ name: message.desglose[i].nombre, y: message.desglose[i].tm/60/60});
                }

                Highcharts.chart('desglose', {
                    chart: {
                        plotBackgroundColor: null,
                        plotBorderWidth: null,
                        plotShadow: false,
                        type: 'pie'
                    },
                    title: {
                        text: 'Desglose de tiempo muerto'
                    },
                    tooltip: {
                        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
                    },
                    plotOptions: {
                        pie: {
                            allowPointSelect: true,
                            cursor: 'pointer',
                            dataLabels: {
                                enabled: true,
                                format: '<b>{point.name}</b>: {point.percentage:.1f} %',
                                style: {
                                    color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'
                                }
                            }
                        }
                    },
                    series: [{
                        name: 'desglose',
                        colorByPoint: true,
                        data: data
                    }]
                });
                

                /*  
                * Gauges
                */
                var gaugeOptions = {

                chart: { type: 'solidgauge' },
                title: null,
                pane: {
                    center: ['50%', '85%'],
                    size: '140%',
                    startAngle: -90,
                    endAngle: 90,
                    background: {
                        backgroundColor: (Highcharts.theme && Highcharts.theme.background2) || '#EEE',
                        innerRadius: '60%',
                        outerRadius: '100%',
                        shape: 'arc'
                    }
                },
                tooltip: {
                    enabled: false
                },
                // the value axis
                yAxis: {
                    stops: [
                        [0.1, '#DF5353'], // green
                        [0.5, '#DDDF0D'], // yellow
                        [0.9, '#55BF3B'] // red
                    ],
                    lineWidth: 0,
                    minorTickInterval: null,
                    tickAmount: 2,
                    title: {
                        y: -70
                    },
                    labels: {
                        y: 16
                    }
                },

                plotOptions: {
                    solidgauge: {
                        dataLabels: {
                            y: 5,
                            borderWidth: 0,
                            useHTML: true
                        }
                    }
                }
                };

                // Disponibilidad
                var chartDisponibilidad = Highcharts.chart('disponibilidad', Highcharts.merge(gaugeOptions, {
                yAxis: {
                    min: 0,
                    max: 100,
                    title: {
                        text: 'Disponibilidad'
                    }
                },
                title: {
                    text: 'Disponibilidad'
                },
                credits: {
                    enabled: false
                },
                series: [{
                    name: 'Disponibilidad',
                    data: [message.disponibilidad[0].disponibilidad],
                    dataLabels: {
                        format: '<div style="text-align:center"><span style="font-size:25px;color:' +
                            ((Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black') + '">{y}</span><br/>' +
                            '<span style="font-size:12px;color:silver">%</span></div>'
                    },
                    tooltip: {
                        valueSuffix: ' %'
                    }
                }]

                }));

                $('#tabla-desglose').html('');

                var table = $('<table>').addClass('table table-bordered table-condensed table-hover table-striped');

                for(i=0; i<message.desglose.length; i++){
                    var row = $('<tr>').addClass('bar');
                    var td = $('<td>').text(message.desglose[i].nombre);
                    row.append(td);
                    var td2 = $('<td>').text((message.desglose[i].tm/60/60).toFixed(3) + "hrs");
                    row.append(td2);
                    table.append(row);
                }

                $('#tabla-desglose').append(table);
                $('#tabla-desglose-eventos').html('');

                table = $('<table>').addClass('table table-bordered table-condensed table-hover table-striped');
                var dato = ["Primer activacion", "Ultima activacion"];
                for(i=0; i<message.primer_ultimo_evento.length; i++){
                    var row = $('<tr>').addClass('bar');
                    var td = $('<td>').text(dato[i]);
                    row.append(td);
                    var td2 = $('<td>').text((message.primer_ultimo_evento[i].fecha.substring(0,10)));
                    row.append(td2);
                    td2 = $('<td>').text((message.primer_ultimo_evento[i].hora));
                    row.append(td2);
                    table.append(row);
                }

                $('#tabla-desglose-eventos').append(table);

            });
    
    
            $("#plantas-choice").change(function() { // Cada vez que se cambie de plantas
                /****************************************************************
                 * Funcion que se manda llamar cada vez que se cambia la planta *
                 ****************************************************************/
                var $dropdown = $(this);
                var id = $dropdown.val();  // Se obtiene el ID de la planta seleccionada
    
                // Se hace una limpieza por si el formario no estaba como valido
                document.getElementById("areas-choice-div").classList.remove('has-error');
                $("#btnConsultar").removeAttr('disabled','disabled');
                $("#btnConsultar").attr('enabled','enabled');
    
                if (id == "all"){ 
                    location.reload(); // Si todas las plantas estan seleccionadas se refresca la pagina para obtener los campos como al principio
                } else {
                    socket.emit('cambio-planta', id); // Si se selecciona cualquier otra se manada el ID por un socket
                }
            });
    
    
            socket.on('cambio-planta', function(returnData) {
                /********************************************************************************************************
                 * Socket que llega cuando se cambio la planta                                                          *
                 * @param: returnData es donde viene almacenado las areas, turnos y productos de la planta seleccionada *
                 ********************************************************************************************************/
    
                // se vacian estos select inputs para agregar nuevos datos.
                var $areasChoice = $("#areas-choice");
                $areasChoice.empty();
    
                var $turnosChoice = $("#turno");
                $turnosChoice.empty();
    
                var $productosChoice = $("#producto");
                $productosChoice.empty();
    
                // AREAS
                if (returnData.areas == ""){ // Si no hay areas!
                    
                    // Se marca un error y se deshabhilita el boton de sumbit
                    $areasChoice.append("<option value='noareas'> Planta sin areas, por favor seleccione otra planta </option>");
                    document.getElementById("areas-choice-div").classList.add('has-error');
                    $("#btnConsultar").removeAttr('enabled','enabled');
                    $("#btnConsultar").attr('disabled','disabled');
    
                } else {
    
                    // Se llena el input select con todas las areas
                    $areasChoice.append("<option value='all-areas' > Todas las areas </option>")  
                    for (var i = 0, l = returnData.areas.length; i < l; i += 1) { // TODO: medir si este loop es mas rapido que el normalito
                        $areasChoice.append("<option value="+ returnData.areas[i].id +" >" + returnData.areas[i].nombre + "</option>");
                        $("#btnConsultar").removeAttr('disabled','disabled');
                        $("#btnConsultar").attr('enabled','enabled'); // Habilita el boton por que cambiaron a una planta que si tiene areas
                    }
                }
    
                // TURNOS
                if (returnData.turnos == ""){ // Si no hay turnos!
    
                    $turnosChoice.append("<option value='noturnos'> No hay turnos en esta planta, seleccione otra opcion </option>");
                } else {
    
                    // Se llena el input select con los turnos
                    for (var i = 0, l = returnData.turnos.length; i < l; i += 1) { // TODO: medir si este loop es mas rapido que el normalito
                        $turnosChoice.append("<option value="+ returnData.turnos[i].id +" >" + returnData.turnos[i].nombre + "</option>");
                    }
                }
    
                // PRODUCTOS 
                if (returnData.productos == ""){ // Si no hay productos
    
                    $productosChoice.append("<option value='noproductos'> No hay productos en esta planta, seleccione otra opcion </option>");
                } else {
    
                    // Se llena el input select con los productos
                    for (var i = 0, l = returnData.productos.length; i < l; i += 1) { 
                        $productosChoice.append("<option value="+ returnData.productos[i].id +" >" + returnData.productos[i].nombre + "</option>");
                    }
                }
            })
    

        </script>
    </body>
    </html>
